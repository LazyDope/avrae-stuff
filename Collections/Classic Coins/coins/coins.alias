embed <drac2>
using(baglib="5f1ffcbf-3f59-4396-b402-1ca0f02d6bbb")
    
ch = character()
bagsLoaded = baglib.LoadedBags()
old_coins = bagsLoaded.get_coins()[1].copy()
autoCoins = baglib.settings.get('autoCoins',get("autocoins","0")=="1")
compact = baglib.settings.get('compactCoins',get("compactcoins","0")=="1")
openMode = baglib.settings.get('openMode','all').lower()
delta, coin_error = baglib.parsecoins("&*&")
focus = None
bagsLoaded['error'] |= coin_error
cmd = ctx.prefix + ctx.alias
title = f"{name} looks inside"
positive = False
if delta:
    focus = bagsLoaded.modify_coins(autoCoins=autoCoins, delta = delta)
    if not bagsLoaded.error:
        delta = list(delta.items())
        delta.sort(key=lambda x: x[1], reverse=True)
        if delta[0][1]>0:
            title = f"{name} adds"
            positive = True
        else:
            title = f"{name} removes"

if not bagsLoaded.error:
    for idx, cointup in enumerate(delta):
        coin, quantity = cointup
        title += f"{'' if idx == 0 else ',' if (positive and quantity>0) or (not positive and quantity<0) else ', and removes'} {baglib.round_nicely(abs(quantity))} {coin}"
        if positive and quantity<0:
            positive = False
        
bag_name = "Coin Purse" if bagsLoaded.use_coin_purse() else baglib.coinPouchName
if delta:
    title += f" to their {bag_name}" if positive else f" from their {bag_name}"
else:
    title += f" their {bag_name}"
    
if not focus:
    bagsLoaded.get_coins()

if bagsLoaded.internal_bag_data:
    success = bagsLoaded.save_bags()
else:
    success = -1 if bagsLoaded.error else 1
    
if coin_error:
    display = '-f ＂`&*&` contained invalid coins＂'
elif openMode != 'none':
    display = ' '.join(bagsLoaded.display_coins(compact, old_coins))
else:
    display = ""

title = [f"{name} tries to add to their {bag_name} but can't find it.", title, f"{name} can't afford that much."][success]

return f"""-title ＂{title}＂ {display}"""
</drac2>
-footer ＂{{get('coinFooter') or get_svar('coinFooter', f"View '{ctx.prefix}help {ctx.alias}' for more help")}}＂
-thumb ＂{{get("coinImage") or get_svar("coinImage", "https://i.imgur.com/auM9MBe.png")}}＂
